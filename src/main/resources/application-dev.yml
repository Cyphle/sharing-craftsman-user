# Custom Oauth2 authorization server
security:
  oauth2:
    client:
      client-id: acme
      client-secret: acmesecret
      scope: read,write
      auto-approve-scopes: '.*'

# Oauth2 with facebook
facebook:
  client:
    clientId: 233668646673605
    clientSecret: 33b17e044ee6a4fa383f46ec6e28ea1d
    accessTokenUri: https://graph.facebook.com/oauth/access_token
    userAuthorizationUri: https://www.facebook.com/dialog/oauth
    tokenName: oauth_token
    authenticationScheme: query
    clientAuthenticationScheme: form
  resource:
    userInfoUri: https://graph.facebook.com/me

# Oauth2 with Github
github:
  client:
    clientId: bd1c0a783ccdd1c9b9e4
    clientSecret: 1a9030fbca47a5b2c28e92f19050bb77824b5ad1
    accessTokenUri: https://github.com/login/oauth/access_token
    userAuthorizationUri: https://github.com/login/oauth/authorize
    clientAuthenticationScheme: form
  resource:
    userInfoUri: https://controllers.github.com/collaborator

# Keep the connection alive if idle for a long time (needed in production)
spring:
  datasource:
    testWhileIdle: true
    validationQuery: SELECT 1
  cache:
    type: NONE

logging:
  level:
    org:
      springframework:
        web: DEBUG
      hibernate: ERROR
  file: /logs/app.log

# JPA
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5Dialect

bonecp:
  driverClass: com.mysql.jdbc.Driver
  url: jdbc:mysql://192.168.1.18:3306/sharingcraftsmanuser?useUnicode=yes&characterEncoding=UTF-8
  username: root
  password: root
  idleMaxAgeInMinutes: 240
  idleConnectionTestPeriodInMinutes: 60
  maxConnectionsPerPartition: 10
  minConnectionsPerPartition: 1
  partitionCount: 2
  acquireIncrement: 5
  statementsCacheSize: 100